---
# if you have any prepararion task
- name: "Prepare"
  hosts: "cicd-debian-12"
  gather_facts: true
  tasks:

    - name: "Include cryptographic content var file"
      ansible.builtin.include_vars: "../../tests/certs/main.yml"

    - name: "Include labocbz.prepare_host"
      tags:
        - "labocbz.prepare_host"
      vars:
        prepare_host__system_users: "{{ inv_prepare_host__system_users }}"
      ansible.builtin.include_role:
        name: "labocbz.prepare_host"

    - name: "Gather facts from all hosts"
      delegate_to: "{{ item }}"
      delegate_facts: true
      loop: "{{ groups['cicd-debian-12'] }}"
      ansible.builtin.setup:

    - name: "Edit /etc/hosts file to add all hosts"
      loop: "{{ groups['cicd-debian-12'] }}"
      loop_control:
        loop_var: host
      register: output
      changed_when: output.rc != 0
      ansible.builtin.shell: "echo \"{{ hostvars[host]['ansible_default_ipv4']['address'] }}  {{ host }} # from Molecule\" >> /etc/hosts"

    - name: "Import cryptographic content if needed (cert)"
      loop: "{{ inv_cert_bundles }}"
      loop_control:
        loop_var: bundle
      when: inv_cert_bundles is defined and bundle.type == "cert"
      ansible.builtin.copy:
        src: "../../tests/certs/{{ bundle.name }}.zip"
        dest: "/tmp/{{ bundle.name }}.zip"
        owner: "root"
        group: "root"
        mode: 0700

    - name: "Import cryptographic content if needed (CA)"
      loop: "{{ inv_cert_bundles }}"
      loop_control:
        loop_var: bundle
      when: inv_cert_bundles is defined and bundle.type == "CA"
      ansible.builtin.copy:
        src: "../../tests/certs/{{ bundle.name }}"
        dest: "/tmp/{{ bundle.name }}"
        owner: "root"
        group: "root"
        mode: 0700

    - name: "Include labocbz.add_certificates"
      tags:
        - "labocbz.add_certificates"
      loop: "{{ inv_cert_bundles }}"
      loop_control:
        loop_var: bundle
      when: inv_cert_bundles is defined
      vars:
        add_certificates__bundle_name: "{{ bundle.name }}"
        add_certificates__bundle_type: "{{ bundle.type }}"
        add_certificates__bundle_src: "{{ bundle.src }}"
        add_certificates__bundle_dest: "{{ bundle.dest }}"
        #add_certificates__bundle_src_user: "{{ bundle.src_user }}"
        #add_certificates__bundle_src_password: "{{ bundle.src_password }}"
        add_certificates__bundle_dest_user: "{{ bundle.dest_user }}"
        add_certificates__bundle_dest_group: "{{ bundle.dest_group }}"
        add_certificates__bundle_dest_mode: "{{ bundle.dest_mode }}"
      ansible.builtin.include_role:
        name: "labocbz.add_certificates"

    - name: "Include labocbz.install_redis"
      tags:
        - "labocbz.install_redis"
      vars:
        install_redis__user: "{{ inv_install_redis__user }}"
        install_redis__group: "{{ inv_install_redis__group }}"
        install_redis__bind: "{{ inv_install_redis__bind }}"
        install_redis__port: "{{ inv_install_redis__port }}"
        install_redis__proteced_mode: "{{ inv_install_redis__proteced_mode }}"
        install_redis__loglevel: "{{ inv_install_redis__loglevel }}"
        install_redis__requirepass: "{{ inv_install_redis__requirepass }}"
        install_redis__cluster: "{{ inv_install_redis__cluster }}"
        install_redis__cluster_port: "{{ inv_install_redis__cluster_port }}"
        install_redis__initial_master: "{{ inv_install_redis__initial_master }}"
        install_redis__initial_mastername: "{{ inv_install_redis__initial_mastername }}"
        install_redis__sentinel_port: "{{ inv_install_redis__sentinel_port }}"
        install_redis__log_path: "{{ inv_install_redis__log_path }}"
        install_redis__logfile: "{{ inv_install_redis__logfile }}"
        install_redis__ssl: "{{ inv_install_redis__ssl }}"
        install_redis__ssl_domain: "{{ inv_install_redis__ssl_domain }}"
        install_redis__ssl_path: "{{ inv_install_redis__ssl_path }}"
        install_redis__ssl_key: "{{ inv_install_redis__ssl_key }}"
        install_redis__ssl_cert: "{{ inv_install_redis__ssl_cert }}"
        install_redis__ssl_client_auth: "{{ inv_install_redis__ssl_client_auth }}"
        install_redis__ssl_ca: "{{ inv_install_redis__ssl_ca }}"
      ansible.builtin.include_role:
        name: "labocbz.install_redis"

    - name: "Include labocbz.install_mariadb"
      tags:
        - "labocbz.install_mariadb"
      vars:
        install_mariadb__confs_path: "{{ inv_install_mariadb__confs_path }}"
        install_mariadb__config_path: "{{ inv_install_mariadb__config_path }}"
        install_mariadb__ssl_path: "{{ inv_install_mariadb__ssl_path }}"
        install_mariadb__log_path: "{{ inv_install_mariadb__log_path }}"
        install_mariadb__port: "{{ inv_install_mariadb__port }}"
        install_mariadb__bind_address: "{{ inv_install_mariadb__bind_address }}"
        install_mariadb__server_id: "{{ inv_install_mariadb__server_id }}"
        install_mariadb__max_connections: "{{ inv_install_mariadb__max_connections }}"
        install_mariadb__innodb_buffer_pool_size: "{{ inv_install_mariadb__innodb_buffer_pool_size }}"
        install_mariadb__general_log_file: "{{ inv_install_mariadb__general_log_file }}"
        install_mariadb__general_log: "{{ inv_install_mariadb__general_log }}"
        install_mariadb__log_error: "{{ inv_install_mariadb__log_error }}"
        install_mariadb__log_bin: "{{ inv_install_mariadb__log_bin }}"
        install_mariadb__expire_logs_days: "{{ inv_install_mariadb__expire_logs_days }}"
        install_mariadb__max_binlog_size: "{{ inv_install_mariadb__max_binlog_size }}"
        install_mariadb__ssl: "{{ inv_install_mariadb__ssl }}"
        install_mariadb__ssl_client_auth: "{{ inv_install_mariadb__ssl_client_auth }}"
        install_mariadb__ssl_ca: "{{ inv_install_mariadb__ssl_ca }}"
        install_mariadb__ssl_cert: "{{ inv_install_mariadb__ssl_cert }}"
        install_mariadb__ssl_key: "{{ inv_install_mariadb__ssl_key }}"
        install_mariadb__charset: "{{ inv_install_mariadb__charset }}"
        install_mariadb__collation: "{{ inv_install_mariadb__collation }}"
        install_mariadb__galera_cluster: "{{ inv_install_mariadb__galera_cluster }}"
        install_mariadb__galera_node_list: "{{ inv_install_mariadb__galera_node_list }}"
        install_mariadb__galera_clustername: "{{ inv_install_mariadb__galera_clustername }}"
        install_mariadb__galera_node_name: "{{ inv_install_mariadb__galera_node_name }}"
        install_mariadb__galera_node_address: "{{ inv_install_mariadb__galera_node_address }}"
        install_mariadb__galera_cluster_seed_host: "{{ inv_install_mariadb__galera_cluster_seed_host }}"
        install_mariadb__secure_root_password: "{{ inv_install_mariadb__secure_root_password }}"
      ansible.builtin.include_role:
        name: "labocbz.install_mariadb"

    - name: "Create database Nextcloud"
      register: output
      run_once: true
      changed_when: output.rc != 0
      ignore_errors: yes
      ansible.builtin.shell: >
        mysql -u root --password='{{ inv_install_mariadb__secure_root_password }}' --execute="CREATE DATABASE nextcloud;"

    - name: "Create users and grants for nextcloud sepcial case, on remote server"
      register: output
      run_once: true
      changed_when: output.rc != 0
      loop:
        - "%"
        - "127.0.0.1"
        - "localhost"
        - "{{ hostvars[ansible_hostname]['ansible_default_ipv4']['address'] }}"
        #- "{{ inventory_hostname }}"
      loop_control:
        loop_var: address
      ansible.builtin.shell: >
        mysql -u root --password='{{ inv_install_mariadb__secure_root_password }}' --execute="GRANT ALL PRIVILEGES ON *.* TO 'nextcloud'@'{{ address }}' IDENTIFIED BY 'password' WITH GRANT OPTION;"

    - name: "Flush Privileges"
      register: output
      changed_when: output.rc != 0
      ansible.builtin.shell: >
        mysql -u root --password='{{ inv_install_mariadb__secure_root_password }}' --execute="FLUSH PRIVILEGES"

    - name: "Include labocbz.install_apache"
      tags:
        - "labocbz.install_apache"
      vars:
        install_apache__https_listen_port: "{{ inv_install_apache__https_listen_port }}"
        install_apache__http_listen_port: "{{ inv_install_apache__http_listen_port }}"
        install_apache__modules: "{{ inv_install_apache__modules }}"
        install_apache__enable_qos: "{{ inv_install_apache__enable_qos }}"
        install_apache__enable_security: "{{ inv_install_apache__enable_security }}"
        install_apache__security_core_version: "{{ inv_install_apache__security_core_version }}"
        install_apache__remove_all_vhosts: "{{ inv_install_apache__remove_all_vhosts }}"
        install_apache__loglevel: "{{ inv_install_apache__loglevel }}"
        install_apache__security_version: "{{ inv_install_apache__security_version }}"
        install_apache__enable_evasive: "{{ inv_install_apache__enable_evasive }}"
        install_apache__enable_pagespeed: "{{ inv_install_apache__enable_pagespeed }}"
        install_apache__enable_prefork: "{{ inv_install_apache__enable_prefork }}"
      ansible.builtin.include_role:
        name: "labocbz.install_apache"

    - name: "Import playbook custom template for Apache2"
      delegate_to: localhost
      run_once: true
      become: false
      ansible.builtin.copy:
        src: "templates/nextcloud.j2"
        dest: "./roles/labocbz.add_apache_confs/templates/customs/nextcloud.j2"
        mode: "0700"

    - name: "Include labocbz.add_apache_confs"
      tags:
        - "labocbz.add_apache_confs"
      vars:
        add_apache_confs__http_listen_port: "{{ inv_add_apache_confs__http_listen_port }}"
        add_apache_confs__https_listen_port: "{{ inv_add_apache_confs__https_listen_port }}"
        add_apache_confs__ldap_url: "{{ inv_add_apache_confs__ldap_url }}"
        add_apache_confs__ldap_port: "{{ inv_add_apache_confs__ldap_port }}"
        add_apache_confs__ldap_dc: "{{ inv_add_apache_confs__ldap_dc }}"
        add_apache_confs__auth_ldap_url: "{{ inv_add_apache_confs__auth_ldap_url }}"
        add_apache_confs__custom_ldap_base_header: "{{ inv_add_apache_confs__custom_ldap_base_header }}"
        add_apache_confs__webmaster: "{{ inv_add_apache_confs__webmaster }}"
        add_apache_confs__request_body: "{{ inv_add_apache_confs__request_body }}"
        add_apache_confs__security_body_limit: "{{ inv_add_apache_confs__security_body_limit }}"
        add_apache_confs__ssl_files_path: "{{ inv_add_apache_confs__ssl_files_path }}"
        add_apache_confs__conf_path: "{{ inv_add_apache_confs__conf_path }}"
        add_apache_confs__base_document_root: "{{ inv_add_apache_confs__base_document_root }}"
        add_apache_confs__configurations: "{{ inv_add_apache_confs__configurations }}"
      ansible.builtin.include_role:
        name: "labocbz.add_apache_confs"

    - name: "Include labocbz.install_php"
      tags:
        - "labocbz.install_php"
      vars:
        install_php__version: "{{ inv_install_php__version }}"
        install_php__version_is_default: "{{ inv_install_php__version_is_default }}"
        install_php__extensions: "{{ inv_install_php__extensions }}"
        install_php__install_fpm: "{{ inv_install_php__install_fpm }}"
        install_php__import_cli_conf: "{{ inv_install_php__import_cli_conf }}"
        install_php__import_apache_conf: "{{ inv_install_php__import_apache_conf }}"
        install_php__import_cgi_conf: "{{ inv_install_php__import_cgi_conf }}"
        install_php__import_fpm_conf: "{{ inv_install_php__import_fpm_conf }}"
        install_php__max_input_time: "{{ inv_install_php__max_input_time }}"
        install_php__output_buffering: "{{ inv_install_php__output_buffering }}"
        install_php__cgi_fix_pathinfo: "{{ inv_install_php__cgi_fix_pathinfo }}"
        install_php__expose_php: "{{ inv_install_php__expose_php }}"
        install_php__max_execution_time: "{{ inv_install_php__max_execution_time }}"
        install_php__memory_limit: "{{ inv_install_php__memory_limit }}"
        install_php__post_max_size: "{{ inv_install_php__post_max_size }}"
        install_php__file_uploads: "{{ inv_install_php__file_uploads }}"
        install_php__upload_max_filesize: "{{ inv_install_php__upload_max_filesize }}"
        install_php__max_file_uploads: "{{ inv_install_php__max_file_uploads }}"
        install_php__allow_url_fopen: "{{ inv_install_php__allow_url_fopen }}"
        install_php__allow_url_include: "{{ inv_install_php__allow_url_include }}"
        install_php__session_save_handler: "{{ inv_install_php__session_save_handler }}"
        install_php__session_save_path: "{{ inv_install_php__session_save_path }}"
        install_php__session_auto_start: "{{ inv_install_php__session_auto_start }}"
        install_php__session_use_strict_mode: "{{ inv_install_php__session_use_strict_mode }}"
        install_php__disable_functions: "{{ inv_install_php__disable_functions }}"
        install_php__remove_all_fpm_pools: "{{ inv_install_php__remove_all_fpm_pools }}"
        install_php__fpm_pools_path: "{{ inv_install_php__fpm_pools_path }}"
        install_php__interned_strings_buffer: "{{ inv_install_php__interned_strings_buffer }}"
        install_php__interned_strings_memory_consumption: "{{ inv_install_php__interned_strings_memory_consumption }}"
      ansible.builtin.include_role:
        name: "labocbz.install_php"

    - name: "Include labocbz.add_php_fpm_confs"
      tags:
        - "labocbz.add_php_fpm_confs"
      vars:
        add_php_fpm_confs__php_version: "{{ inv_add_php_fpm_confs__php_version }}"
        add_php_fpm_confs__php_pools_path: "{{ inv_add_php_fpm_confs__php_pools_path }}"
        add_php_fpm_confs__fpm_pools: "{{ inv_add_php_fpm_confs__fpm_pools }}"
      ansible.builtin.include_role:
        name: "labocbz.add_php_fpm_confs"
