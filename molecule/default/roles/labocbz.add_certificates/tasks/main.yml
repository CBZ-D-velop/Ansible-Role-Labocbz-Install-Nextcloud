---
- name: "Get all certs"
  run_once: true
  block:
    - name: "Prepare workspace"
      block:
        - name: "Check if workspace exist"
          register: add_certificates_tmp_workspace_stat
          ansible.builtin.stat:
            path: "{{ add_certificates_tmp_workspace }}"

        - name: "Create workspace"
          when: not add_certificates_tmp_workspace_stat.stat.exists
          ansible.builtin.file:
            path: "{{ add_certificates_tmp_workspace }}"
            state: directory
            recurse: yes
            owner: "root"
            group: "root"
            mode: "0755"

    - name: "Get files from sources"
      block:
        - name: "Get bundle from remote source"
          when: add_certificates_bundle_src is match("http.*://.*")
          ansible.builtin.get_url:
            url: "{{ add_certificates_bundle_src }}"
            dest: "{{ add_certificates_tmp_workspace }}"
            owner: "root"
            group: "root"
            mode: "0755"
            validate_certs: false
            timeout: 120
            username: "{{ add_certificates_bundle_src_user }}"
            password: "{{ add_certificates_bundle_src_password }}"
            force_basic_auth: yes

        - name: "Get bundle from local source"
          when: not add_certificates_bundle_src is match("http.*://.*")
          ansible.builtin.copy:
            remote_src: yes
            src: "{{ add_certificates_bundle_src }}"
            dest: "{{ add_certificates_tmp_workspace }}"
            owner: "root"
            group: "root"
            mode: "0755"

        - name: "Fetch bundle on controller node (cert)"
          when: add_certificates_bundle_type == "cert"
          ansible.builtin.fetch:
            src: "{{ add_certificates_tmp_workspace }}/{{ add_certificates_bundle_name }}.zip"
            dest: "/tmp/.ansible/add_certificates/{{ add_certificates_bundle_name }}.zip"
            flat: yes

        - name: "Fetch bundle on controller node (CA)"
          when: add_certificates_bundle_type == "CA"
          ansible.builtin.fetch:
            src: "{{ add_certificates_tmp_workspace }}/{{ add_certificates_bundle_name }}"
            dest: "/tmp/.ansible/add_certificates/{{ add_certificates_bundle_name }}"
            flat: yes

- name: "Deploy bundler on servers"
  when: add_certificates_bundle_type == "cert"
  block:
    - name: "Check if bundle destination exist"
      register: add_certificates_bundle_dest_stat
      ansible.builtin.stat:
        path: "{{ add_certificates_bundle_dest }}"

    - name: "Create bundle destination"
      when: not add_certificates_bundle_dest_stat.stat.exists
      ansible.builtin.file:
        path: "{{ add_certificates_bundle_dest }}"
        state: directory
        recurse: yes
        owner: "{{ add_certificates_bundle_dest_user }}"
        group: "{{ add_certificates_bundle_dest_group }}"
        mode: "{{ add_certificates_bundle_dest_mode }}"

    - name: "Import bundle"
      ansible.builtin.copy:
        dest: "{{ add_certificates_bundle_dest }}/{{ add_certificates_bundle_name }}.zip"
        src: "/tmp/.ansible/add_certificates/{{ add_certificates_bundle_name }}.zip"
        owner: "{{ add_certificates_bundle_dest_user }}"
        group: "{{ add_certificates_bundle_dest_group }}"
        mode: "{{ add_certificates_bundle_dest_mode }}"

    - name: "Deploy bundle"
      ansible.builtin.unarchive:
        dest: "{{ add_certificates_bundle_dest }}"
        src: "{{ add_certificates_bundle_dest }}/{{ add_certificates_bundle_name }}.zip"
        owner: "{{ add_certificates_bundle_dest_user }}"
        group: "{{ add_certificates_bundle_dest_group }}"
        mode: "{{ add_certificates_bundle_dest_mode }}"
        remote_src: yes

- name: "Import CA on hosts"
  when: add_certificates_bundle_type == "CA"
  notify: "Update CAs"
  block:
    - name: "Check if bundle destination exist CA on host"
      register: add_certificates_ca_location_stat
      ansible.builtin.stat:
        path: "{{ add_certificates_ca_location }}"

    - name: "Create bundle destination CA on host"
      when: not add_certificates_ca_location_stat.stat.exists
      ansible.builtin.file:
        path: "{{ add_certificates_ca_location }}"
        state: directory
        recurse: yes
        owner: "{{ add_certificates_bundle_dest_user }}"
        group: "{{ add_certificates_bundle_dest_group }}"
        mode: "{{ add_certificates_bundle_dest_mode }}"

    - name: "Import bundle CA on host"
      ansible.builtin.copy:
        dest: "{{ add_certificates_ca_location }}/"
        src: "/tmp/.ansible/add_certificates/{{ add_certificates_bundle_name }}"
        owner: "root"
        group: "root"
        mode: "0711"
